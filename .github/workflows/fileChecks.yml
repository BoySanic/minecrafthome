name: Check .bin File Permissions
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
 

jobs:
  check_permissions:
    name: executables-filecheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5

    - name: Install dependencies (if any)
      run: |
        python3 -m pip install --upgrade pip
 

    - name: Check apps
      id: run_script_apps
      run: |
        python3 ci_tools/executable-check.py > output_apps.txt
        echo "failed_apps=$(grep -c " - " output_apps.txt)" >> $GITHUB_ENV
      env:
        # Replace with the directory you want to check
        DIRECTORY_TO_CHECK: images/makeproject/project/apps

    - name: Check for failed files
      if: ${{ env.failed_apps != '0' }} 
      run: |
        echo "::error title=Missing executable permissions::Found .bin files without executable permissions.  See output for details."
        cat output.txt
        exit 1
 

    - name: Success (if no failed files)
      if: ${{ env.failed_apps == '0' }} 
      run: echo "All .bin files have executable permissions (or no .bin files found)."
  
  check_versionxml:
    name: check_versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5

    - name: Install dependencies (if any)
      run: |
        python3 -m pip install --upgrade pip
 

    - name: Check apps
      id: run_xml_check_script
      run: |
        python3 ci_tools/version-xml-check.py > output_xml.txt
        echo "failed_apps=$(grep -c " - " output_apps.txt)" >> $GITHUB_ENV
      env:
        # Replace with the directory you want to check
        DIRECTORY_TO_CHECK: images/makeproject/project/apps

    - name: Check for failed files
      if: ${{ env.failed_apps != '0' }} 
      run: |
        echo "::error title=Version mismatch::Found xml files with mismatched version number from parent directory.  See output for details."
        cat output.txt
        exit 1
 

    - name: Success (if no failed files)
      if: ${{ env.failed_apps == '0' }} 
      run: echo "All version.xml files look correct (or we did not find any)."